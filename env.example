# =============================================================================
# ENVIRONMENT CONFIGURATION FOR FINANCE APP
# =============================================================================
# This file contains example environment variables for your application.
# Copy this file to `.env` and update the values with your actual credentials.
# 
# IMPORTANT: Never commit your actual .env file to version control!
# Add `.env` to your .gitignore file to keep your secrets safe.

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Primary Database URL (Neon PostgreSQL)
# ======================================
# Get this from your Neon dashboard: https://neon.tech/
# Format: postgresql://username:password@endpoint/database?sslmode=require
# 
# Example Neon connection string:
# DATABASE_URL=postgresql://username:password@ep-cool-darkness-123456.us-east-1.aws.neon.tech/neondb?sslmode=require
DATABASE_URL=postgresql://your-username:your-password@your-neon-endpoint.neon.tech/your-database?sslmode=require

# Alternative PostgreSQL URL (fallback)
# =====================================
# If you have multiple database environments, you can use this as a fallback
# POSTGRES_URL=postgresql://username:password@localhost:5432/finance_app

# Database Connection Pool Configuration
# =====================================
# These settings control how many database connections your app maintains

# Number of connections to keep in the pool (default: 5)
# Increase for high-traffic applications
DB_POOL_SIZE=5

# Additional connections beyond pool_size when needed (default: 10)
# Set to 0 to prevent overflow connections
DB_MAX_OVERFLOW=10

# Seconds to wait for a connection from the pool (default: 30)
# Increase if you're getting timeout errors
DB_POOL_TIMEOUT=30

# Seconds before a connection is recycled (default: 3600 = 1 hour)
# Neon connections are stable, but recycling prevents stale connections
DB_POOL_RECYCLE=3600

# Enable SQL query logging for debugging (default: False)
# Set to True during development to see all SQL queries
# WARNING: This will log sensitive data, disable in production!
DB_ECHO=False

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application Environment
# ======================
# Options: development, staging, production
ENVIRONMENT=development

# API Configuration
# ================
# Secret key for JWT tokens - MUST be changed in production!
# Generate a secure key: openssl rand -hex 32
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production

# JWT token expiration time in minutes (default: 30 minutes)
JWT_EXPIRATION_MINUTES=30

# API Rate Limiting
# ================
# Requests per minute for rate limiting
RATE_LIMIT_PER_MINUTE=60

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# OpenAI Configuration
# ===================
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key-here

# OpenAI Organization ID (optional)
# OPENAI_ORG_ID=your-org-id

# Default model for chat completions
OPENAI_DEFAULT_MODEL=gpt-3.5-turbo

# Maximum tokens for responses
OPENAI_MAX_TOKENS=1000

# =============================================================================
# QUICK SETUP GUIDE FOR NEON
# =============================================================================
# 1. Sign up for Neon at https://neon.tech/
# 2. Create a new project and database
# 3. Copy the connection string from your Neon dashboard
# 4. Replace DATABASE_URL above with your actual connection string
# 5. Copy this file to `.env` in the backend directory
# 6. Run your application: `uvicorn app.main:app --reload`

